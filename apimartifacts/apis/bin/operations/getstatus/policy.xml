<!--
    - Policies are applied in the order they appear.
    - Position <base/> inside a section to inherit policies from the outer scope.
    - Comments within policies are not preserved.
-->
<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
<policies>
	<!-- Throttle, authorize, validate, cache, or transform the requests -->
	<inbound>
		<base />
		<set-variable name="testV" value="@(context.Request.MatchedParameters.GetValueOrDefault("code","777"))" />
		<choose>
			<when condition="@(true)">
				<return-response response-variable-name="existing response variable">
					<set-status code="500" reason="Internal Server Error" />
					<set-header name="failure" exists-action="override">
						<value>failure</value>
					</set-header>
					<set-body>@((string)context.Variables["testV"])</set-body>
				</return-response>
			</when>
		</choose>
	</inbound>
	<!-- Control if and how the requests are forwarded to services  -->
	<backend>
		<base />
	</backend>
	<!-- Customize the responses -->
	<outbound>
		<base />
	</outbound>
	<!-- Handle exceptions and customize error responses  -->
	<on-error>
		<base />
	</on-error>
</policies>